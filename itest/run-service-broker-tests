#!/bin/bash

set -eu
set -o pipefail

base_dir=$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)

source "$base_dir/itest/lib/assert.sh"
source "$base_dir/itest/lib/helpers.sh"
source "$base_dir/itest/lib/config.sh"

it_can_push_the_service_broker_app() {
  local org=${1:?org null or not set}
  local space=${2:?space null or not set}
  local app_name=${3:?app_name null or not set}

  local project=$(create_service_broker_app)

  local params=$(jq -n \
  --arg org "$org" \
  --arg space "$space" \
  --arg app_name "$app_name" \
  --arg path "$project" \
  '{
    command: "push",
    org: $org,
    space: $space,
    app_name: $app_name,
    path: $path
  }')

  put_with_params "$CCR_SOURCE" "$params" | jq -e '.version | keys == ["timestamp"]'

  assert::success cf::is_app_started "$app_name"
}

it_can_create_a_service_broker_space_scoped() {
  local org=${1:?org null or not set}
  local space=${2:?space null or not set}
  local service_broker=${3:?service_broker null or not set}
  local service_broker_url=${4:?service_broker_url null or not set}

  local params=$(jq -n \
    --arg org "$org" \
    --arg space "$space" \
    --arg service_broker "$service_broker" \
    --arg username admin \
    --arg password password \
    --arg url "$service_broker_url" \
    '{
      command: "create-service-broker",
      org: $org,
      space: $space,
      service_broker: $service_broker,
      username: $username,
      password: $password,
      url: $url,
      space_scoped: true
    }')

  put_with_params "$CCR_SOURCE" "$params" | jq -e '.version | keys == ["timestamp"]'

  assert::success cf::service_broker_exists "$service_broker"
}

it_can_create_a_service_broker() {
  local org=${1:?org null or not set}
  local space=${2:?space null or not set}
  local service_broker=${3:?service_broker null or not set}
  local service_broker_url=${4:?service_broker_url null or not set}

  local params=$(jq -n \
    --arg service_broker "$service_broker" \
    --arg username admin \
    --arg password password \
    --arg url "$service_broker_url" \
    '{
      command: "create-service-broker",
      service_broker: $service_broker,
      username: $username,
      password: $password,
      url: $url
    }')

  put_with_params "$CCR_SOURCE" "$params" | jq -e '.version | keys == ["timestamp"]'

  assert::success cf::service_broker_exists "$service_broker"
}

it_can_enable_service_access() {
  local org=${1:?org null or not set}
  local space=${2:?space null or not set}
  local service=${3:?service null or not set}
  local broker=${4:-}
  local plan=${5:-}
  local access_org=${6:-}

  local params=$(jq -n \
    --arg service "$service" \
    --arg broker "$broker" \
    --arg plan "$plan" \
    --arg access_org "$access_org" \
    '{
      command: "enable-service-access",
      service: $service,
      broker: $broker,
      plan: $plan,
      access_org: $access_org
    }')

  put_with_params "$CCR_SOURCE" "$params" | jq -e '.version | keys == ["timestamp"]'

  cf::target "$org" "$space"
  assert::success cf::is_marketplace_service_available "$service" "$plan" "$access_org"
}

it_can_enable_service_access_using_deprecated_service_broker_param() {
  local org=${1:?org null or not set}
  local space=${2:?space null or not set}
  local service=${3:?service null or not set}
  local plan=${4:-}
  local access_org=${5:-}

  local params=$(jq -n \
    --arg service "$service" \
    --arg plan "$plan" \
    --arg access_org "$access_org" \
    '{
      command: "enable-service-access",
      service_broker: $service,
      plan: $plan,
      access_org: $access_org
    }')

  put_with_params "$CCR_SOURCE" "$params" | jq -e '.version | keys == ["timestamp"]'

  cf::target "$org" "$space"
  assert::success cf::is_marketplace_service_available "$service" "$plan" "$access_org"
}

it_can_disable_service_access() {
  local org=${1:?org null or not set}
  local space=${2:?space null or not set}
  local service=${3:?service null or not set}
  local broker=${4:-}
  local plan=${5:-}
  local access_org=${6:-}

  local params=$(jq -n \
    --arg service "$service" \
    --arg broker "$broker" \
    --arg plan "$plan" \
    --arg access_org "$access_org" \
    '{
      command: "disable-service-access",
      service: $service,
      broker: $broker,
      plan: $plan,
      access_org: $access_org
    }')

  put_with_params "$CCR_SOURCE" "$params" | jq -e '.version | keys == ["timestamp"]'

  cf::target "$org" "$space"
  assert::failure cf::is_marketplace_service_available "$service" "$plan"  "$access_org"
}

it_can_disable_service_access_using_deprecated_service_broker_param() {
  local org=${1:?org null or not set}
  local space=${2:?space null or not set}
  local service=${3:?service null or not set}
  local plan=${4:-}
  local access_org=${5:-}

  local params=$(jq -n \
    --arg service "$service" \
    --arg plan "$plan" \
    --arg access_org "$access_org" \
    '{
      command: "disable-service-access",
      service_broker: $service,
      plan: $plan,
      access_org: $access_org
    }')

  put_with_params "$CCR_SOURCE" "$params" | jq -e '.version | keys == ["timestamp"]'

  cf::target "$org" "$space"
  assert::failure cf::is_marketplace_service_available "$service" "$plan"  "$access_org"
}

it_can_delete_a_service_broker() {
  local org=${1:?org null or not set}
  local space=${2:?space null or not set}
  local service_broker=${3:?service_broker null or not set}

  local params=$(jq -n \
    --arg org "$org" \
    --arg space "$space" \
    --arg service_broker "$service_broker" \
    '{
      command: "delete-service-broker",
      org: $org,
      space: $space,
      service_broker: $service_broker
    }')

  put_with_params "$CCR_SOURCE" "$params" | jq -e '.version | keys == ["timestamp"]'

  assert::failure cf::service_broker_exists "$service_broker"
}

org=$(generate_test_name_with_spaces "Org")
space=$(generate_test_name_with_spaces "Space")

login

setup_integration_tests "$org" "$space"

cf::target "$org" "$space"

describe "it can create a space scoped service broker"
{
  service_broker=$(generate_test_name_with_spaces "Space Scoped Broker")
  service_broker_url="https://$(app_to_hostname "$service_broker").$CCR_CF_APPS_DOMAIN"

  run it_can_push_the_service_broker_app \"$org\" \"$space\" \"$service_broker\"
  run it_can_create_a_service_broker_space_scoped \"$org\" \"$space\" \"$service_broker\" \"$service_broker_url\"

  run it_can_delete_a_service_broker \"$org\" \"$space\" \"$service_broker\"
  run it_can_delete_an_app \"$org\" \"$space\" \"$service_broker\"
}

describe "it can create a service broker and enable and disable service access"
{
  service_broker=$(generate_test_name_with_spaces "Broker")
  service_broker_url="https://$(app_to_hostname "$service_broker").$CCR_CF_APPS_DOMAIN"

  run it_can_push_the_service_broker_app \"$org\" \"$space\" \"$service_broker\"
  run it_can_create_a_service_broker \"$org\" \"$space\" \"$service_broker\" \"$service_broker_url\"

  service=overview-service
  broker=""
  plan=""
  access_org=$org

  run it_can_enable_service_access \"$org\" \"$space\" \"$service\" \"$broker\" \"$plan\" \"$access_org\"
  run it_can_disable_service_access \"$org\" \"$space\" \"$service\" \"$broker\" \"$plan\" \"$access_org\"

  plan="small"
  run it_can_enable_service_access \"$org\" \"$space\" \"$service\" \"$broker\" \"$plan\" \"$access_org\"
  run it_can_disable_service_access \"$org\" \"$space\" \"$service\" \"$broker\" \"$plan\" \"$access_org\"

  run it_can_enable_service_access_using_deprecated_service_broker_param \"$org\" \"$space\" \"$service\"
  run it_can_disable_service_access_using_deprecated_service_broker_param \"$org\" \"$space\" \"$service\"

  run it_can_delete_a_service_broker \"$org\" \"$space\" \"$service_broker\"
  run it_can_delete_an_app \"$org\" \"$space\" \"$service_broker\"
}

describe "it can enable and disable service access from a particular service broker"
{
  service_broker_1=$(generate_test_name_with_spaces "Broker 1")
  service_broker_1_url="https://$(app_to_hostname "$service_broker_1").$CCR_CF_APPS_DOMAIN"

  run it_can_push_the_service_broker_app \"$org\" \"$space\" \"$service_broker_1\"
  run it_can_create_a_service_broker \"$org\" \"$space\" \"$service_broker_1\" \"$service_broker_1_url\"

  service_broker_2=$(generate_test_name_with_spaces "Broker 2")
  service_broker_2_url="https://$(app_to_hostname "$service_broker_2").$CCR_CF_APPS_DOMAIN"

  run it_can_push_the_service_broker_app \"$org\" \"$space\" \"$service_broker_2\"
  run it_can_create_a_service_broker \"$org\" \"$space\" \"$service_broker_2\" \"$service_broker_2_url\"

  service=overview-service
  broker=$service_broker_1
  plan=""
  access_org=$org

  run it_can_enable_service_access \"$org\" \"$space\" \"$service\" \"$broker\" \"$plan\" \"$access_org\"
  run it_can_disable_service_access \"$org\" \"$space\" \"$service\" \"$broker\" \"$plan\" \"$access_org\"

  run it_can_delete_a_service_broker \"$org\" \"$space\" \"$service_broker_2\"
  run it_can_delete_an_app \"$org\" \"$space\" \"$service_broker_2\"

  run it_can_delete_a_service_broker \"$org\" \"$space\" \"$service_broker_1\"
  run it_can_delete_an_app \"$org\" \"$space\" \"$service_broker_1\"
}

teardown_integration_tests "$org" "$space"
