#!/bin/bash

set -eu
set -o pipefail

base_dir=$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)

source "$base_dir/itest/lib/helpers.sh"
source "$base_dir/itest/lib/config.sh"

org=$(generate_test_name_with_spaces "Org")
space=$(generate_test_name_with_spaces "Space")
app_name=$(generate_test_name_with_spaces "App")

service=$CCR_SYNC_SERVICE
plan_1=$CCR_SYNC_PLAN_1
plan_2=$CCR_SYNC_PLAN_2
service_instance=$(generate_test_name_with_spaces "Sync Service")
broker=$service
configuration_1=$CCR_SYNC_CONFIGURATION_1
configuration_2=$CCR_SYNC_CONFIGURATION_2
tags="list, of, tags"
wait_for_service="false"
update_service="true"

login

setup_integration_tests "$org" "$space"

cf::target "$org" "$space"

describe "create a service that does not exist without specifying broker"
{
  empty_broker_value=""
  run it_can_create_a_service \"$org\" \"$space\" \"$service\" \"$plan_1\" \"$service_instance\" \"$empty_broker_value\" \"$configuration_1\"
}

describe "create a service that already exists"
{
  run it_can_create_a_service \"$org\" \"$space\" \"$service\" \"$plan_1\" \"$service_instance\" \"$broker\" \"$configuration_1\"
}

describe "create a service that already exists and update with changes"
{
  run it_can_create_a_service \"$org\" \"$space\" \"$service\" \"$plan_2\" \"$service_instance\" \"$broker\" \"$configuration_2\" \"$wait_for_service\" \"$update_service\"
}

describe "create a service that already exists and update without changes"
{
  run it_can_create_a_service \"$org\" \"$space\" \"$service\" \"$plan_2\" \"$service_instance\" \"$broker\" \"$configuration_2\" \"$wait_for_service\" \"$update_service\"
}

describe "update an existing service"
{
  run it_can_update_a_service \"$org\" \"$space\" \"$service_instance\" \"$plan_1\" \"$configuration_1\" \"$tags\"
}

describe "bind, unbind, and delete a service"
{
  run it_can_push_an_app \"$org\" \"$space\" \"$app_name\"

  run it_can_bind_a_service \"$org\" \"$space\" \"$app_name\" \"$service_instance\"
  run it_can_unbind_a_service \"$org\" \"$space\" \"$app_name\" \"$service_instance\"
  run it_can_delete_a_service \"$org\" \"$space\" \"$service_instance\"

  run it_can_delete_an_app \"$org\" \"$space\" \"$app_name\"
}

teardown_integration_tests "$org" "$space"
