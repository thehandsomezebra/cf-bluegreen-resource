#!/bin/bash

set -eu
set -o pipefail

base_dir=$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)

source "$base_dir/itest/lib/assert.sh"
source "$base_dir/itest/lib/helpers.sh"
source "$base_dir/itest/lib/config.sh"

it_can_run_a_task_with_disk_quota() {
  local org=${1:?org null or not set}
  local space=${2:?space null or not set}
  local app_name=${3:?app_name null or not set}

  local params=$(jq -n \
  --arg org "$org" \
  --arg space "$space" \
  --arg app_name "$app_name" \
  --arg task_command "echo run-task-with-disk_quota-test" \
  --arg disk_quota "756M" \
  '{
    command: "run-task",
    org: $org,
    space: $space,
    app_name: $app_name,
    task_command: $task_command,
    disk_quota: $disk_quota
  }')

  put_with_params "$CCR_SOURCE" "$params" | jq -e '.version | keys == ["timestamp"]'

  assert::success cf::was_task_run "$app_name" "run-task-with-disk_quota-test"
}

it_can_run_a_task_with_memory() {
  local org=${1:?org null or not set}
  local space=${2:?space null or not set}
  local app_name=${3:?app_name null or not set}

  local params=$(jq -n \
  --arg org "$org" \
  --arg space "$space" \
  --arg app_name "$app_name" \
  --arg task_command "echo run-task-with-memory-test" \
  --arg memory "512M" \
  '{
    command: "run-task",
    org: $org,
    space: $space,
    app_name: $app_name,
    task_command: $task_command,
    memory: $memory
  }')

  put_with_params "$CCR_SOURCE" "$params" | jq -e '.version | keys == ["timestamp"]'

  assert::success cf::was_task_run "$app_name" "run-task-with-memory-test"
}

it_can_run_a_task_with_name() {
  local org=${1:?org null or not set}
  local space=${2:?space null or not set}
  local app_name=${3:?app_name null or not set}

  local params=$(jq -n \
  --arg org "$org" \
  --arg space "$space" \
  --arg app_name "$app_name" \
  --arg task_command "echo run-task-with-name-test" \
  --arg task_name "run-task-with-name-test" \
  '{
    command: "run-task",
    org: $org,
    space: $space,
    app_name: $app_name,
    task_command: $task_command,
    task_name: $task_name
  }')

  put_with_params "$CCR_SOURCE" "$params" | jq -e '.version | keys == ["timestamp"]'

  assert::success cf::was_task_run "$app_name" "run-task-with-name-test"
}

it_can_run_a_task() {
  local org=${1:?org null or not set}
  local space=${2:?space null or not set}
  local app_name=${3:?app_name null or not set}

  local params=$(jq -n \
  --arg org "$org" \
  --arg space "$space" \
  --arg app_name "$app_name" \
  --arg task_command "echo run-task-test-all" \
  --arg task_name "run-task-test-all" \
  --arg memory "512M" \
  --arg disk_quota "756M" \
  '{
    command: "run-task",
    org: $org,
    space: $space,
    app_name: $app_name,
    task_command: $task_command,
    task_name: $task_name,
    memory: $memory,
    disk_quota: $disk_quota
  }')

  put_with_params "$CCR_SOURCE" "$params" | jq -e '.version | keys == ["timestamp"]'

  assert::success cf::was_task_run "$app_name" "run-task-test-all"
}

org=$(generate_test_name_with_spaces "Org")
space=$(generate_test_name_with_spaces "Space")
app_name=$(generate_test_name_with_spaces "App")

login

setup_integration_tests "$org" "$space"

cf::target "$org" "$space"

run it_can_push_an_app \"$org\" \"$space\" \"$app_name\"

run it_can_run_a_task_with_disk_quota \"$org\" \"$space\" \"$app_name\"
run it_can_run_a_task_with_memory \"$org\" \"$space\" \"$app_name\"
run it_can_run_a_task_with_name \"$org\" \"$space\" \"$app_name\"
run it_can_run_a_task \"$org\" \"$space\" \"$app_name\"

run it_can_delete_an_app \"$org\" \"$space\" \"$app_name\"

teardown_integration_tests "$org" "$space"
