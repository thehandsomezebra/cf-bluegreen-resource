#!/bin/bash

set -eu
set -o pipefail

base_dir=$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)

source "$base_dir/itest/lib/assert.sh"
source "$base_dir/itest/lib/helpers.sh"
source "$base_dir/itest/lib/config.sh"

it_can_share_a_service() {
  local source_org=${1:?source_org null or not set}
  local source_space=${2:?source_space null or not set}
  local service_instance=${3:?service_instance null or not set}
  local other_space=${4:?other_space null or not set}
  local other_org=${5:-}

  local params=$(jq -n \
  --arg org "$source_org" \
  --arg space "$source_space" \
  --arg service_instance "$service_instance" \
  --arg other_space "$other_space" \
  --arg other_org "$other_org" \
  '{
    command: "share-service",
    org: $org,
    space: $space,
    service_instance: $service_instance,
    other_space: $other_space,
    other_org: $other_org
  }')

  put_with_params "$CCR_SOURCE" "$params" | jq -e '.version | keys == ["timestamp"]'

  cf::target "$other_org" "$other_space"
  assert::success cf::service_exists "$service_instance"
}

it_can_unshare_a_service() {
  local source_org=${1:?source_org null or not set}
  local source_space=${2:?source_space null or not set}
  local service_instance=${3:?service_instance null or not set}
  local other_space=${4:?other_space null or not set}
  local other_org=${5:-}

  local params=$(jq -n \
  --arg org "$source_org" \
  --arg space "$source_space" \
  --arg service_instance "$service_instance" \
  --arg other_space "$other_space" \
  --arg other_org "$other_org" \
  '{
    command: "unshare-service",
    org: $org,
    space: $space,
    service_instance: $service_instance,
    other_space: $other_space,
    other_org: $other_org
  }')

  put_with_params "$CCR_SOURCE" "$params" | jq -e '.version | keys == ["timestamp"]'

  cf::target "$other_org" "$other_space"
  assert::failure cf::service_exists "$service_instance"
}

source_org=$(generate_test_name_with_spaces "Source Org")
source_space=$(generate_test_name_with_spaces "Source Space")

other_space=$(generate_test_name_with_spaces "Other Space")
other_org=$(generate_test_name_with_spaces "Other Org")

service=$CCR_SHARE_SERVICE
plan=$CCR_SHARE_PLAN
configuration=$CCR_SHARE_CONFIGURATION
service_instance=$(generate_test_name_with_spaces "Shared Service")

login

setup_integration_tests "$source_org" "$source_space"
setup_integration_tests "$source_org" "$other_space"
setup_integration_tests "$other_org" "$other_space"

cf::target "$source_org" "$source_space"

run it_can_disable_feature_flag \"service_instance_sharing\"
run it_can_enable_feature_flag \"service_instance_sharing\"

#it can create a service for sharing
run it_can_create_a_service \"$source_org\" \"$source_space\" \"$service\" \"$plan\" \"$service_instance\" \"$configuration\"

#it can share/unshare a service with an other space in the same org
run it_can_share_a_service \"$source_org\" \"$source_space\" \"$service_instance\" \"$other_space\"
run it_can_unshare_a_service \"$source_org\" \"$source_space\" \"$service_instance\" \"$other_space\"

#it can share a service with an other space in an other org
run it_can_share_a_service \"$source_org\" \"$source_space\" \"$service_instance\" \"$other_space\" \"$other_org\"
run it_can_unshare_a_service \"$source_org\" \"$source_space\" \"$service_instance\" \"$other_space\" \"$other_org\"

run it_can_delete_a_service \"$source_org\" \"$source_space\" \"$service\"

teardown_integration_tests "$other_org" "$other_space"
teardown_integration_tests "$source_org" "$source_space"
